@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = "User Management";
}
@using Microsoft.AspNetCore.Identity;
@using PulseCheck.MainApp.Models
@model UsersAndRolesViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject UserManager<IdentityUser> userManager

<div class="container text-center">
    <div class="row">
        <div class="col-8">
            <form name="user-setting-section">
                <div class="col-2"></div>
                <div class="col-12">
                    <h1 class="text-start">Users</h1>
                </div>
                <div class="col-2">
                </div>
                @*<hr />*@
                <div class="scrollable-tables">
                    <table id="dtBasicExample" class="table table-striped table-sm">
                        <tr class="sticky-table-headers bg-light"><th>#</th><th>User name</th><th>Email confirmed</th><th>Roles</th></tr>
                        @{
                            IdentityUser user;
                            foreach (var item in Model.users!)
                            {
                                int index = (Model.users).IndexOf(item) + 1;
                                user = await userManager.FindByNameAsync(item.UserName);
                                var userRoles = await userManager.GetRolesAsync(user);
                                <tr class="align-middle">
                                    <td>@index</td>
                                    <td>@item.UserName</td>
                                    <td><input name="@item.Email" type="checkbox" value="EmailConfirmed" onclick="updateUserRole(this)" class="user-settings form-check-input me-1" @((item.EmailConfirmed) ? "checked disabled" : "")></td>
                                    <td>
                                        <div class="btn-group dropend">
                                            <button class="btn btn-outline-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                                User roles
                                            </button>
                                            <ul class="dropdown-menu">
                                                @foreach (var itemRole in Model.roles!)
                                                {
                                                    int indexRole = (Model.roles).IndexOf(itemRole) + 1;
                                                    <li>
                                                        <span class="dropdown-item">
                                                            <input name="@item.Email" id="@(index.ToString() + indexRole.ToString())" type="checkbox" value="@itemRole.Name" onclick="updateUserRole(this)" class="user-settings form-check-input me-1" @((userRoles.Contains(itemRole.Name)) ? "checked" : "")>
                                                            <label for="@(index.ToString() + indexRole.ToString())" class="form-check-label"> @itemRole.Name</label>
                                                        </span>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
            </form>
        </div>
        <div class="col"></div>
        <div class="col-3">
            <div class="col-12">
                <h1 class="text-start">Roles</h1>
            </div>
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Role name" aria-label="Role name" aria-describedby="btnGroupAddon2">
                <button id="add-role-button" onclick="createRole(this)" type="button" class="btn btn-success">Add role</button>
            </div>
            <hr />
            <div class="scrollable-tables">
                <table class="table table-striped">
                    <tr class="sticky-table-headers bg-light"><th>#</th><th>Name</th><th class="text-danger"><i class="bi bi-trash"></i></th></tr>
                    @foreach (var item in Model.roles!)
                    {
                        var isRemovable = item.IsRemovable;
                        int roleIndex = (Model.roles).IndexOf(item) + 1;
                        <tr class="align-middle">
                            <td>@roleIndex</td>
                            <td>@item.Name</td>
                            <td>
                                <button value="@item.Name" id="rd-btn-@roleIndex" type="button" @*class="btn btn-outline-danger btn-sm"*@ data-bs-toggle="modal" data-onclick="removeRole('rd-btn-@roleIndex')" data-bs-target="#confirm-deletion" class="@(!isRemovable ? "btn btn-outline-secondary btn-sm" : "btn btn-outline-danger btn-sm")" @(!isRemovable ? "disabled" : "")>
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>
