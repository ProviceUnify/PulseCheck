@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Newtonsoft.Json;
@using RSWMonitor.MainApp.Models;
@{
    ViewData["Title"] = "HealthChecks Management";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model List<Configurations>

@{
    if (ViewBag.failure != "")
    {
        <script type="text/javascript">
            window.onload = function () {
                showToast(true, '@ViewBag.failure');
            }
        </script>

    }
}

<div class="container text-center">
    <div class="modal fade" id="add-configuration" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="configurations-toats-title">Add/edit configuration</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form name="add-configuration-form" method="post" asp-controller="ManageRemoteMonitors" asp-action="AddConfiguration">
                    <div class="modal-body">
                        <div class="input-group input-group-sm mb-3">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Configuration name</span>
                            <input type="text" id="configuration-name" name="configuration-name" placeholder="Name" class="form-control" aria-label="Configuration name" aria-describedby="inputGroup-sizing-sm" required>
                            <div class="btn-group dropend">
                                <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                    Available for roles
                                </button>
                                <ul class="dropdown-menu">
                                    @foreach (var item in ViewBag.Roles!)
                                    {
                                        <li>
                                            <span class="dropdown-item">
                                                <input type="checkbox" name="role-@item.Name" id="role-@item.Name" value="@item.Name" class="user-settings form-check-input me-1 add-configuration-roles">
                                                <label for="role-@item.Name" class="form-check-label"> @item.Name</label>
                                            </span>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="input-group input-group-sm mb-3">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Configuration URI</span>
                            <input type="text" id="configuration-uri" name="configuration-uri" placeholder="https://test.org/health" class="form-control" aria-label="Configuration uri" aria-describedby="inputGroup-sizing-sm" required>
                        </div>
                        <div class="input-group input-group-sm mb-3">
                            <label class="input-group-text" for="configuration-type">Type of configuration</label>
                            <select class="form-select" name="configuration-type" id="configuration-type">
                                @{
                                    foreach(var item in ViewBag.configurationTypes)
                                    {
                                        <option value=@item.ConfigurationTypesId>@item.ConfigurationTypesName</option>
                                    }
                                }
                            </select>
                        
                        </div>
                        <div class="form-check text-start">
                            <input class="form-check-input" type="checkbox" name="configuration-has-controls" value="true" id="configuration-has-controls">
                            <input class="form-check-input" style="display: none;" type="checkbox" name="configuration-db-id" value="-1" id="configuration-db-id" checked>
                            <label class="form-check-label" for="configuration-has-controls">
                                Has controls?
                            </label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success btn-ok">Add/edit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    @*<nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <button class="nav-link active" id="nav-configurations-tab" data-bs-toggle="tab" data-bs-target="#nav-configurations" type="button" role="tab" aria-controls="nav-configurations" aria-selected="true">Configurations</button>
            <button class="nav-link" id="nav-logs-tab" data-bs-toggle="tab" data-bs-target="#nav-logs" type="button" role="tab" aria-controls="nav-lgos" aria-selected="false">Logs</button>
        </div>
    </nav>*@
    <br />
    <div class="tab-content row col-12" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-configurations" role="tabpanel" aria-labelledby="nav-configurations-tab" tabindex="0">
            <div class="row">
                <div class="col-7">
                    <h1 class="text-start">Configurations</h1>

                </div>
                <div class="col-3 mt-2">
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#add-configuration"><i class="bi bi-plus-square"></i> Add configuration</button>

                </div>
                <div class="col-2 mt-2">
                    <div class="input-group mb-3">
                        <label class="input-group-text" for="inputGroupSelect01">Count</label>
                        <select class="form-select" id="inputGroupSelect01">
                            <option value="50" selected>50</option>
                            <option value="100">100</option>
                            <option value="150">150</option>
                        </select>
                    </div>
                </div>

            </div>
            <table class="table table-striped table-sm">
                <tr class="sticky-table-headers bg-light"><th>#</th><th class="col-3">Name</th><th class="col-3">URI</th><th>Configuration type</th><th>Roles</th><th>Controls (WIP)</th><th class="text-primary"><i class="bi bi-pencil-square"></i></th><th class="text-danger"><i class="bi bi-trash"></i></th></tr>
                @foreach (var configuration in Model)
                {
                    int index = (Model).IndexOf(configuration) + 1;
                    <tr>
                        <td class="align-middle configuration-entry-id">@index</td>
                        <td class="align-middle configuration-entry-name">@configuration.Name</td>
                        <td class="align-middle configuration-entry-uri">@configuration.Uri</td>
                        <td class="align-middle configuration-entry-type" data-type="@configuration.ConfigurationTypes?.ConfigurationTypesId">@configuration.ConfigurationTypes?.ConfigurationTypesName</td>
                        <td class="align-middle configuration-entry-roles" data-configuration-roles="@configuration.ConfigurationRoles">
                            @{
                                var listOfConfigurationRoles = JsonConvert.DeserializeObject<List<string>>(@configuration.ConfigurationRoles);
                                foreach(var item in listOfConfigurationRoles)
                                {
                                    <span class="badge bg-primary" data-role-name="@item">@item</span>
                                }
                            }
                        </td>
                        <td class="align-middle configuration-entry-has-controls" data-has-controls="@((bool)configuration.HasControls)">
                            @if ((bool)configuration.HasControls)
                            {
                                <div class="btn-group" role="group" aria-label="Basic example">
                                    <button type="button" class="btn btn-success btn-sm"><i class="bi bi-play-fill"></i></button>
                                    <button type="button" class="btn btn-success btn-sm"><i class="bi bi-arrow-clockwise"></i></button>
                                </div>
                                    <button type="button" class="btn btn-outline-danger btn-sm"><i class="bi bi-stop-fill"></i></button>
                            } else
                            {
                                <span class="fst-italic text-body">-</span>
                            }
                        </td>
                        @{
                            index = (Model).IndexOf(configuration) + 1;
                        }
                        <td class="align-middle"><button type="button" value="@configuration.Id" id="ed-btn-@index" data-onclick="@*addConfiguration('ed-btn-@index')*@" onclick="fillConfiguration('ed-btn-@index')" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#add-configuration"><i class="bi bi-pencil-square"></i></button></td>
                        <td class="align-middle"><button type="button" value="@configuration.Id" id="rd-btn-@index" data-onclick="removeConfiguration('rd-btn-@index')" class="btn btn-outline-danger btn-sm" data-bs-toggle="modal" data-bs-target="#confirm-deletion"><i class="bi bi-trash"></i></button></td>
                    </tr>
                }
            </table>
        </div>
        <div class="tab-pane fade" id="nav-logs" role="tabpanel" aria-labelledby="nav-logs-tab" tabindex="0">
            @*<h1 class="text-start">Logs</h1>
            <table class="table table-striped table-sm">
            <tr class="sticky-table-headers bg-light"><th>#</th><th>Name</th><th>URI</th><th>Controls (WIP)</th><th class="text-danger"><i class="bi bi-trash"></i></th></tr>
            </table>*@
        </div>
    </div>
</div>