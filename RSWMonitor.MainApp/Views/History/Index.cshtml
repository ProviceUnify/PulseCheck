@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Newtonsoft.Json;
@using RSWMonitor.MainApp.Models;
@{
    ViewData["Title"] = "History";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    List<HealthStatus> healthStatus = new();
    healthStatus = ViewBag.Statuses;
    healthStatus.Reverse();
    Dictionary<int, string> foundConfigurations = new();
    foundConfigurations = (Dictionary<int, string>)ViewData["foundConfigurations"];
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model List<Execution>

<div class="container text-center">
    <div class="tab-pane fade show active" id="nav-configurations" role="tabpanel" aria-labelledby="nav-configurations-tab" tabindex="0">
        <div class="row">
            <div class="col-2">
                <h1 class="text-start">History</h1>
            </div>
        </div>

        <form method="post" asp-controller="History" asp-action="DownloadHistory" id="search-form">
            <div class="row">
                <div class="col-2 text-end mt-2">
                    <input type="text" class="form-control form-control-sm execute-filtering" aria-label="text-input" placeholder="Search items...">
                </div>
                <div class="text-end col-10 mt-2">
                    <div class="input-group input-group-sm mb-3">
                        <button type="button" class="btn btn-sm btn-danger execute-filtering">
                            <i class="bi bi-x-lg"></i>
                        </button>
                        <span class="input-group-text">from</span>
                        <input id="startDate" name="startDate" class="form-control w-25 execute-filtering" type="date" />
                        <span class="input-group-text">to</span>
                        <input id="endDate" name="endDate" class="form-control w-25 execute-filtering" type="date" />
                        <select class="form-select w-auto execute-filtering" name="status" aria-label="Example select with button addon">
                            <option value="-1" selected>Any status</option>
                            @foreach (var status in healthStatus)
                            {
                                <option value="@status.StatusId">@status.StatusName</option>
                            }
                            @*<option value="0" selected>.XSLX</option>
                            <option value="1">.PDF</option>*@
                        </select>
                        <button class="btn btn-primary" type="submit"><i class="bi bi-download"></i> Save history to</button>
                        <select class="form-select w-auto" name="fileType" aria-label="Example select with button addon">
                            <option value="0" selected>.XSLX</option>
                            <option value="1">.PDF</option>
                        </select>
                    </div>
                </div>
            </div>
        </form>
        <div class="accordion" id="accordionPanelsStayOpenExample">
            @foreach (Execution exec in Model)
            {
                int index = (Model).IndexOf(exec) + 1;
                <div class="accordion-item">
                    <h2 class="accordion-header" id="panelsStayOpen-heading-@index">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapse-@index" aria-expanded="false" aria-controls="panelsStayOpen-collapse-@index">
                            <div class="container">
                                <div class="row text-middle">
                                    <div class="col-3 border-end text-middle">
                                        <span class="fw-bold">Name: </span>@exec.Name <span title="Configuration ID in database" class="badge bg-success">ID: @foundConfigurations.Where(s => s.Value == exec.Name).First().Key</span>
                                    </div>
                                    <div class="col-3 text-start border-end">
                                        <span class="fw-bold">URI: </span><a href="@exec.Uri" onclick="window.open(this.href, '_blank')">@exec.Uri</a>
                                    </div>
                                    <div class="col-5 text-center border-end">
                                        <span class="fw-bold">On state from: </span>@exec.OnStateFrom
                                    </div>
                                    <div class="col-1 text-start ms-0">
                                        <span class="fw-bold">Count: </span>@exec.HealthCheckExecutionHistories.Count
                                    </div>
                                </div>
                            </div>
                        </button>
                    </h2>
                    <div id="panelsStayOpen-collapse-@index" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-heading-@index">
                        @if (exec.HealthCheckExecutionHistories.Count > 0)
                        {
                            <table class="sortable shadow-sm table table-striped my-0">
                                <thead>
                                    <tr>
                                        <th class="border-end text-end col-1">#</th>
                                        <th class="col-2 border-end">Component name</th>
                                        <th class="col-4 border-end">Failure description</th>
                                        <th class="col-2 border-end">Status</th>
                                        <th class="col-3" data-defaultsort="desc">Time</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var historyEntry in exec.HealthCheckExecutionHistories)
                                    {
                                        int historyEntryIndex = (exec.HealthCheckExecutionHistories.ToList()).IndexOf(historyEntry) + 1;
                                        <tr class="align-middle">
                                            <td class="border-end text-end col-1">
                                                @historyEntryIndex
                                            </td>
                                            <td class="border-end fw-bold search-here">@historyEntry.Name</td>
                                            @if (historyEntry.Description == null)
                                            {
                                                <td class="border-end text-center text-muted fst-italic search-here">No data</td>
                                            }
                                            else
                                            {
                                                <td class="border-end text-start search-here">@historyEntry.Description</td>
                                            }
                                            <td class="border-end search-here search-here-status">
                                                @switch (historyEntry.StatusNavigation.StatusId)
                                                {
                                                    case 0:
                                                        <span class="text-danger"><i class="bi bi-x-circle"></i> @historyEntry.StatusNavigation.StatusName</span>
                                                        break;
                                                    case 1:
                                                        <span class="text-warning"><i class="bi bi-exclamation-triangle"></i> @historyEntry.StatusNavigation.StatusName</span>
                                                        break;
                                                    case 2:
                                                        <span class="text-success"><i class="bi bi-check"></i> @historyEntry.StatusNavigation.StatusName</span>
                                                        break;
                                                }
                                            </td> @*что тут происходит, почему оно работает*@
                                            <td class="border-end search-here search-here-date">@historyEntry.On</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
